#+PROPERTY: header-args :results silent
#+title: My nix home-manager config

#+begin_src bash
nix run . -- build -b backup --flake .
#+end_src

#+begin_src bash
nix run . -- switch -b backup --flake .
#+end_src

* Setup nix on Debian 12

add user to sudoers (because it's much more convinient)

#+begin_src bash
/sbin/usermod -a -G sudo $USER
#+end_src

install package ~nix-setup-systemd~

#+begin_src bash
apt-get -y install nix nix-setup-systemd
#+end_src

Add user to ~nix-users~ group

#+begin_src bash
/sbin/usermod -a -G nix-users $USER
#+end_src

reboot // logout>login

update global nix config config
[[file:/sudo::/etc/nix/nix.conf]]

#+begin_src conf :tangle no
max-jobs = auto

experimental-features = nix-command flakes
#+end_src

* Bootstrap the config

Install git (which is not present on PVE base install)

#+begin_src bash
apt-get install -y git
#+end_src

Clone the repo

#+begin_src bash
git clone git@github.com:stfl/dotfiles.git ~/.config/dotfiles
#+end_src

#+begin_src bash :noeval
nix run . -- switch -b backup --flake .
#+end_src

** set nix installed zsh as default shell
when trying to set a nix installed shell as default it will cause an error as follows:

#+begin_quote bash
chsh -s /home/stefan/.nix-profile/bin/zsh
Password:
chsh: /home/stefan/.nix-profile/bin/zsh is an invalid shell
#+end_quote

manually ad ~/home/stefan/.nix-profile/bin/zsh~ to [[file:/etc/passwd]]

Alternatively, add the following to [[file:/etc/shells]] to mark nix installed shells as valid shells.

#+begin_src txt
/home/stefan/.nix-profile/bin/zsh
/home/stefan/.nix-profile/bin/bash
/home/stefan/.nix-profile/bin/fish
#+end_src

then run this to enabel this shell

#+begin_src bash
chsh -s /home/stefan/.nix-profile/bin/zsh
#+end_src

On the Proxmox workstation setting ~~/.nix-profile/bin/zsh~ as the login shell does not work because it is set set via LDAP.
As a workaround I install zsh via apt, set ~/bin/zsh~ as LDAP Login shell and still set ~programs.zsh.enable = true~ in nix.

/Let's hope the versions and nix config will not diverge too much..../

* Setup Syncthing
* Configure logind on Debian 12

I am using i3wm, installed through nix home-manager. System-wide configuration
like logind to configure PowerKey and so on cannot be managed through
home-manager and need to be configured separately.

=NOTE= Tangle a single src block with ~C-u~ prefix command or ~SPC u~ in doomemacs.
- ~SPC u C-c C-v t~

** with hibernate

If hibernate is working use

~/etc/systemd/logind.conf.d/90_config.conf~
#+begin_src conf :mkdirp yes :tangle /sudo::/etc/systemd/logind.conf.d/90_config.conf
[Login]
HandlePowerKey=suspend-then-hibernate
IdleAction=suspend-then-hibernate
IdleActionSec=20m
#+end_src

~/etc/systemd/sleep.conf.d/90_config.conf~
#+begin_src conf :mkdirp yes :tangle /sudo::/etc/systemd/sleep.conf.d/90_config.conf
[Sleep]
HibernateDelaySec=1h
#+end_src

** without hibernate

~/etc/systemd/logind.conf.d/90_config.conf~
#+begin_src conf :mkdirp yes :tangle /sudo::/etc/systemd/logind.conf.d/90_config.conf
[Login]
HandlePowerKey=suspend
IdleAction=suspend
IdleActionSec=20m
#+end_src

** reload systemd config

#+begin_src bash :dir /sudo:: :results value
systemctl daemon-reload
#+end_src
* Docker

Installing Docker via home-manager dow not make any sense, does it?
Install it directly via apt

#+begin_src bash :dir /sudo::
apt-get install docker docker-compose -y
#+end_src

Add unprivileged user ~stefan~ to the ~docker~ group to enable interacting with the docker daemon without sudo.

#+begin_src bash :dir /sudo::
usermod -a -G docker $USER
#+end_src

reboot
